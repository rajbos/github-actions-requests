on:
  workflow_dispatch:
    
jobs:
  find-action-name:
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.get-action.outputs.action }}
      owner: ${{ steps.get-action.outputs.owner }}
      name: ${{ steps.get-action.outputs.name }}
      request_owner: ${{ steps.get-action.outputs.request_owner }}
      request_repo: ${{ steps.get-action.outputs.request_repo }}
      #request_issue: ${{ steps.get-action.outputs.request_issue }}
    steps:
    - uses: actions/github-script@v5
      name: Find action from comment
      id: get-action
      with:
        result-encoding: string
        script: |
            const action="calibreapp/image-actions"
            const actionOwner="calibreapp"
            const actionName="image-actions"

            let owner="rajbos-actions-test"
            let repo="image-actions"

            console.log(`::set-output name=action::${action}`)
            console.log(`::set-output name=owner::${actionOwner}`)
            console.log(`::set-output name=name::${actionName}`)
      
            console.log(`::set-output name=request_owner::${owner}`)
            console.log(`::set-output name=request_repo::${repo}`)
  
  dependabot-results:
    runs-on: ubuntu-latest
    needs: find-action-name
    steps:
    - uses: actions/checkout@v2
    - uses: actions/github-script@v5
      name: Get resuls from Dependabot scan
      id: get-codeql-results
      with:      
        github-token: ${{ secrets.GH_TOKEN }}
        # todo: wait for the actual scans to have been completed
        script: |
           const script = require('./src/dependabot.js')
                  
           // note: owner is now the organization the FORK lives in:
           const owner = "${{ needs.find-action-name.outputs.request_owner }}"
           const repo = "${{ needs.find-action-name.outputs.request_repo }}"

           // check if  dependabot security updates are enabled for the repo
           const enabledResult = await github.request('GET /repos/{owner}/{repo}/vulnerability-alerts', {
             owner,
             repo
           })

           console.log(`enabledResult: [${enabledResult}]`)
           console.log(`enabledResult: [${JSON.stringify(enabledResult)}]`)

           if (enabledResult) { 
            console.log(`Dependabot security alerts has been enabled for the repo ${owner}/${repo}, loading the alerts`)
            const results = await script({github, owner, repo})

            console.log(`result: ${JSON.stringify(results)}`)
            console.log(`::set-output name=dependabot_high::${results.high}`)
            console.log(`::set-output name=dependabot_moderate::${results.moderate}`)
           }
           else {
              console.log(`Dependabot security alerts have not been enabled for the repo ${owner}/${repo}, skipping the scan`)
              
              console.log(`::set-output name=dependabot_high::999`)
              console.log(`::set-output name=dependabot_moderate::999`)
           }

          